% 参数设置
radiance_map_path = 'D:/target_images/Flir2/sjxg.jpg';  % 辐射图路径
input_folder = 'D:/target_images/Flir3';                % 红外图像输入文件夹
output_folder = 'D:/test_images/';                  % 结果保存文件夹
alpha_strength = 0.65;                                   % 黑斑强度系数

% 预处理辐射图（只需执行一次）
radiance_map = imread(radiance_map_path);
if size(radiance_map, 3) == 3
    radiance_gray = rgb2gray(radiance_map);
else
    radiance_gray = radiance_map;
end

% 获取输入文件夹中所有图像文件
file_list = dir(fullfile(input_folder, '*.jpg'));  % 根据实际格式修改通配符
if isempty(file_list)
    error('输入文件夹中未找到图像文件');
end

% 创建输出文件夹（如果不存在）
if ~exist(output_folder, 'dir')
    mkdir(output_folder);
end

% 批量处理循环
for i = 1:length(file_list)
    try
        % 读取红外图像
        img_path = fullfile(input_folder, file_list(i).name);
        infrared_img = imread(img_path);
        
        % 调整辐射图尺寸
        radiance_resized = imresize(radiance_gray, [size(infrared_img,1), size(infrared_img,2)]);
        
        % 创建alpha遮罩
        alpha_mask = 1 - double(radiance_resized)/255;
        alpha_mask = alpha_mask * alpha_strength;
        
        % 处理多通道图像
        if size(infrared_img, 3) == 3
            alpha_mask = repmat(alpha_mask, [1 1 3]);
        end
        
        % 图像合成
        infrared_double = im2double(infrared_img);
        combined_img = infrared_double.*(1-alpha_mask);
        
        % 生成输出路径
        [~, name, ext] = fileparts(file_list(i).name);
        output_path = fullfile(output_folder, [name '_processed' ext]);
        
        % 保存结果（保持原始图像格式）
        imwrite(combined_img, output_path);
        fprintf('已处理: %s\n', file_list(i).name);
    catch ME
        fprintf('处理失败: %s \n 错误信息: %s\n', file_list(i).name, ME.message);
    end
end

disp('批量处理完成！');
